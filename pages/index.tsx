import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Resolution from "@lestprotocol/sdk"
import { useEffect, useState } from 'react';


function formatNumber(num: number): string {
  if (num >= 1000000) {
    return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';
  } else if (num >= 1000) {
    return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';
  }
  return num.toString();
}

function shortenAddress(address: string): string {
  const prefix = address.substr(0, 6);
  const suffix = address.substr(-6);
  return prefix.length < 1 || suffix.length < 1 ? "" : `${prefix}....${suffix}`;
}

const Home: NextPage = () => {

  const [name, setName] = useState("")
  const [address, setAddress] = useState("")
  const [balance, setBalance] = useState({} as {
    formatted: string;
    value: bigint;
  })
  const [loading, setLoading] = useState(false)

  const resolve = () => {
    const resolution = new Resolution()
    setLoading(true)
    resolution.resolveDomain(name).then(data => {
      setLoading(false)
      setAddress(data.address)
      setBalance((data.balance))
    }).catch(e => console.log(e))
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      {/* Navigation Bar */}
      <nav className={styles.navbar}>
        <ConnectButton />
      </nav>

      <main className={styles.main}>
        {/* Card with Transparent Background */}
        <div className={styles.card}>
          <div className={styles.cardContent}>
            <input className={styles.input} type="text" value={name} onChange={(e) => setName(e.target.value)} />
            <button className={styles.button} onClick={resolve} disabled={loading}>{loading ? "Loading....." : "Resolve your name"}</button>
            <p className={styles.p}>Address: {loading ? "Loading...." : shortenAddress(address)}</p>
            <p className={styles.p}>Balance: {loading ? "Loading...." : formatNumber(Number(balance.formatted))}</p>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
